{"version":3,"sources":["logo.svg","components/navBar.js","components/sideBar.js","images/sunbed.png","images/cloudy.png","components/weather.js","components/quote.js","components/taskBoard.js","components/body.js","App.js","reportWebVitals.js","index.js"],"names":["AntSwitch","withStyles","theme","root","width","height","padding","display","switchBase","color","transform","palette","common","white","opacity","backgroundColor","borderColor","primary","main","thumb","boxShadow","track","border","grey","borderRadius","checked","Switch","NavBar","props","useState","darkmode","setDarkMode","Navbar","className","bg","variant","Brand","href","Nav","onChange","event","name","SideBar","itemColor","listBgColor","darkMode","classes","makeStyles","listItem","mainList","background","useStyles","List","aria-labelledby","subheader","ListSubheader","component","id","ListItem","button","ListItemIcon","ListItemText","EventNoteTwoTone","AlarmOn","WeatherCard","status","setStatus","useEffect","longitude","latitude","navigator","geolocation","getCurrentPosition","res","coords","fetch","then","json","data","weather","document","querySelector","innerHTML","sys","country","Math","round","parseFloat","temp","updateWeatherInfo","src","cloudyImage","Quote","quote","setquote","author","setauthor","contents","quotes","EmptyTaskBoard","CustomTextField","inputColor","marginRight","borderBottomColor","TextField","elements","querySelectorAll","element","style","currentDate","Date","date","getDate","day","getDay","month","getMonth","input","lable","label","InputProps","InputLabelProps","Fab","onClick","getElementById","value","size","aria-label","Add","sunbed","TaskBoard","Body","bgColor","setbgColor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.95adb6d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport \"../css/navBar.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport { FormControlLabel, FormGroup, Switch, withStyles } from \"@material-ui/core\";\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: \"#000000\",\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: \"#4ee44e\",\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\",\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n\r\nfunction NavBar(props) {\r\n  const [darkmode, setDarkMode] = useState(false);\r\n  const handleChange = event => {\r\n    setDarkMode(!darkmode);\r\n    props.onChange(darkmode);\r\n  };\r\n  return (\r\n    <Navbar className=\"main\" bg=\"primary\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\">\r\n        <PlaylistAddIcon></PlaylistAddIcon>ToDo\r\n      </Navbar.Brand>\r\n      <Nav className=\"justify-content-end main-nav-bar\">\r\n        <p className=\"darkmode-p\">DarkMode</p>\r\n        <AntSwitch onChange={handleChange} name=\"darkmode\" />\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { PureComponent } from \"react\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AlarmOn, CalendarToday, EventNoteTwoTone } from \"@material-ui/icons\";\r\n\r\nfunction SideBar(props) {\r\n  let itemColor = \"black\";\r\n  let listBgColor = \"#f9f9f9\";\r\n  if (props.darkMode) {\r\n    itemColor = \"#f9f9f9\";\r\n    listBgColor = \"#2a2a2a\";\r\n  } else {\r\n    itemColor = \"black\";\r\n    listBgColor = \"#f9f9f9\";\r\n  }\r\n  const useStyles = makeStyles({\r\n    listItem: {\r\n      color: itemColor,\r\n    },\r\n    mainList: {\r\n      background: listBgColor,\r\n      height: \"100vh\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <List\r\n      className={classes.mainList}\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader className={classes.listItem} component=\"div\" id=\"nested-list-subheader\">\r\n          See more\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <TodayIcon className={classes.listItem}></TodayIcon>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} color=\"white\" primary=\"Today\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <EventNoteTwoTone className={classes.listItem}></EventNoteTwoTone>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} primary=\"Upcomming\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <AlarmOn className={classes.listItem}></AlarmOn>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} primary=\"CountDown\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\nexport default SideBar;\r\n","export default __webpack_public_path__ + \"static/media/sunbed.a964e424.png\";","export default __webpack_public_path__ + \"static/media/cloudy.a6efbb41.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/taskBoard.css\";\r\nimport cloudyImage from \"../images/cloudy.png\";\r\n\r\nfunction WeatherCard() {\r\n  const [status, setStatus] = useState(null);\r\n  const updateWeatherInfo = data => {\r\n    setStatus(data.weather[0].main);\r\n    document.querySelector(\".weather-status\").innerHTML = status;\r\n    document.querySelector(\".location\").innerHTML = data.name + \",\" + data.sys.country;\r\n    document.querySelector(\".temperature\").innerHTML = `${Math.round(\r\n      parseFloat(data.main.temp) - 273.15\r\n    )} &#186C `;\r\n  };\r\n  useEffect(() => {\r\n    let longitude, latitude;\r\n    navigator.geolocation.getCurrentPosition(res => {\r\n      longitude = res.coords.longitude;\r\n      latitude = res.coords.latitude;\r\n      fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a17391360b374134d5b0e6b62e80f2f6`\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          updateWeatherInfo(data);\r\n        });\r\n    });\r\n  });\r\n  return (\r\n    <div className=\"weather-info \">\r\n      <div className=\"header\">\r\n        <h4 className=\"text\">Weather</h4>\r\n      </div>\r\n      <div className=\"status\">\r\n        <div className=\"contain\">\r\n          <p className=\"text location\"></p>\r\n          <p className=\"text temperature\"></p>\r\n        </div>\r\n        <div className=\"contain\">\r\n          <span className=\"text weather-status\"></span>\r\n          <img src={cloudyImage} className=\"weather-img\"></img>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/taskBoard.css\";\r\n\r\nfunction Quote() {\r\n  const renderQuote = content => {};\r\n  const [quote, setquote] = useState(null);\r\n  const [author, setauthor] = useState(null);\r\n  useEffect(() => {\r\n    fetch(\"https://quotes.rest/qod?language=en\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setquote(data.contents.quotes[0].quote);\r\n        setauthor(data.contents.quotes[0].author);\r\n      });\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h4 className=\"text\">Today quote</h4>\r\n      </div>\r\n      <p className=\"quote-content\">\"{quote}\"</p>\r\n      <div className=\"author-div\">\r\n        <p className=\"author-name\">--{author}-- </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quote;\r\n","import { Fab, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport \"../css/taskBoard.css\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport sunbed from \"../images/sunbed.png\";\r\nimport WeatherCard from \"./weather\";\r\nimport Quote from \"./quote\";\r\n\r\nfunction EmptyTaskBoard(props) {\r\n  const inputColor = props.darkMode ? \"white\" : \"black\";\r\n  let CustomTextField;\r\n  if (!props.darkMode) {\r\n    CustomTextField = withStyles({\r\n      root: {\r\n        width: \"500px\",\r\n        marginRight: \"20px\",\r\n      },\r\n    })(TextField);\r\n  } else {\r\n    CustomTextField = withStyles({\r\n      root: {\r\n        width: \"500px\",\r\n        marginRight: \"20px\",\r\n\r\n        \"& label.Mui-focused\": {\r\n          color: \"white\",\r\n        },\r\n        \"& .MuiInput-underline:after\": {\r\n          borderBottomColor: \"white\",\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n          color: \"white\",\r\n          \"& fieldset\": {\r\n            borderColor: \"white\",\r\n          },\r\n          \"&:hover fieldset\": {\r\n            borderColor: \"white\",\r\n          },\r\n          \"&.Mui-focused fieldset\": {\r\n            borderColor: \"white\",\r\n          },\r\n        },\r\n      },\r\n    })(TextField);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const elements = document.querySelectorAll(\".text\");\r\n    for (const element of elements) {\r\n      if (props.darkMode) {\r\n        element.style.color = \"white\";\r\n      } else {\r\n        element.style.color = \"black\";\r\n      }\r\n    }\r\n  });\r\n\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n  const currentDate = new Date();\r\n  const date = currentDate.getDate();\r\n  const day = days[currentDate.getDay() - 1];\r\n  const month = months[currentDate.getMonth()];\r\n  const useStyles = makeStyles({\r\n    input: {\r\n      color: inputColor,\r\n    },\r\n    lable: {\r\n      color: inputColor,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const addNewTaskClick = () => {\r\n    const content = document.getElementById(\"task-content\").value;\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row main-empty-task\">\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <div className=\"time-info\">\r\n              <h4 className=\"text\">Today</h4>\r\n              <span className=\"text\">\r\n                {day} {date} {month}\r\n              </span>\r\n            </div>\r\n            <div className=\"add-task\">\r\n              <CustomTextField\r\n                id=\"task-content\"\r\n                variant=\"outlined\"\r\n                label=\"Add New Task\"\r\n                InputProps={{\r\n                  className: classes.input,\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.lable,\r\n                }}\r\n              ></CustomTextField>\r\n              <Fab onClick={addNewTaskClick} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                <Add />\r\n              </Fab>\r\n            </div>\r\n            <div className=\"empty-info\">\r\n              <img className=\"sunbed-image\" src={sunbed}></img>\r\n              <p className=\"nofitication text\">No task for today?</p>\r\n              <p className=\"hints text\">Add somework todo</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col weather-card\">\r\n            <WeatherCard></WeatherCard>\r\n            <Quote></Quote>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ExistTaskBoard(props) {}\r\nfunction TaskBoard(props) {\r\n  const [currentTask, setcurrentTask] = useState(null);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <EmptyTaskBoard darkMode={props.darkMode}></EmptyTaskBoard>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/body.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SideBar from \"./sideBar\";\r\nimport TaskBoard from \"./taskBoard\";\r\n\r\nfunction Body(props) {\r\n  const [bgColor, setbgColor] = useState(\"white\");\r\n  useEffect(() => {\r\n    if (props.darkMode) {\r\n      setbgColor(\"#202020\");\r\n      document.getElementById(\"body\").style.backgroundColor = bgColor;\r\n    } else {\r\n      setbgColor(\"white\");\r\n      document.getElementById(\"body\").style.backgroundColor = bgColor;\r\n    }\r\n  });\r\n  return (\r\n    <div id=\"body\" className=\"main-body\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <SideBar darkMode={props.darkMode}></SideBar>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <TaskBoard darkMode={props.darkMode}></TaskBoard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./components/navBar\";\nimport NavBar from \"./components/navBar\";\nimport Body from \"./components/body\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const darkModeChange = () => {\n    setDarkMode(!darkMode);\n  };\n  return (\n    <div className=\"App\">\n      <NavBar onChange={darkModeChange}></NavBar>\n      <Body darkMode={darkMode}></Body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}