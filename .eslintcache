[{"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\index.js":"1","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\App.js":"2","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\reportWebVitals.js":"3","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\navBar.js":"4","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\body.js":"5","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\index.js":"6","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\reportWebVitals.js":"7","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\App.js":"8","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\body.js":"9","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\navBar.js":"10","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\sideBar.js":"11","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\taskBoard.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":346,"mtime":1611751765079,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":674,"mtime":1611759393336,"results":"17","hashOfConfig":"14"},{"size":656,"mtime":1611761615057,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":550,"mtime":1612116980857,"results":"22","hashOfConfig":"20"},{"size":961,"mtime":1611936557107,"results":"23","hashOfConfig":"20"},{"size":1606,"mtime":1611937709849,"results":"24","hashOfConfig":"20"},{"size":2008,"mtime":1611925521181,"results":"25","hashOfConfig":"20"},{"size":3631,"mtime":1612117782741,"results":"26","hashOfConfig":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"19df08n",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"jttvl7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\index.js",[],["56","57"],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\App.js",["58"],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\reportWebVitals.js",[],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\navBar.js",[],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\body.js",["59"],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\index.js",[],["60","61"],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\reportWebVitals.js",[],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\App.js",["62"],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\body.js",["63","64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../css/body.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SideBar from \"./sideBar\";\r\nimport TaskBoard from \"./taskBoard\";\r\n\r\nfunction Body(props) {\r\n  const [bgColor, setbgColor] = useState(\"white\");\r\n  useEffect(() => {\r\n    if (props.darkMode) {\r\n      setbgColor(\"#202020\");\r\n      document.getElementById(\"body\").style.backgroundColor = bgColor;\r\n    } else {\r\n      setbgColor(\"white\");\r\n      document.getElementById(\"body\").style.backgroundColor = bgColor;\r\n    }\r\n  });\r\n  return (\r\n    <div id=\"body\" className=\"main-body\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <SideBar darkMode={props.darkMode}></SideBar>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <TaskBoard darkMode={props.darkMode}></TaskBoard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\navBar.js",["66","67"],"import React, { useState } from \"react\";\r\nimport \"../css/navBar.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport { FormControlLabel, FormGroup, Switch, withStyles } from \"@material-ui/core\";\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: \"#000000\",\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: \"#4ee44e\",\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\",\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n\r\nfunction NavBar(props) {\r\n  const [darkmode, setDarkMode] = useState(false);\r\n  const handleChange = event => {\r\n    setDarkMode(!darkmode);\r\n    props.onChange(darkmode);\r\n  };\r\n  return (\r\n    <Navbar className=\"main\" bg=\"primary\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\">\r\n        <PlaylistAddIcon></PlaylistAddIcon>ToDo\r\n      </Navbar.Brand>\r\n      <Nav className=\"justify-content-end main-nav-bar\">\r\n        <p className=\"darkmode-p\">DarkMode</p>\r\n        <AntSwitch onChange={handleChange} name=\"darkmode\" />\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\sideBar.js",["68","69"],"import React, { PureComponent } from \"react\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AlarmOn, CalendarToday, EventNoteTwoTone } from \"@material-ui/icons\";\r\n\r\nfunction SideBar(props) {\r\n  let itemColor = \"black\";\r\n  let listBgColor = \"#f9f9f9\";\r\n  if (props.darkMode) {\r\n    itemColor = \"#f9f9f9\";\r\n    listBgColor = \"#2a2a2a\";\r\n  } else {\r\n    itemColor = \"black\";\r\n    listBgColor = \"#f9f9f9\";\r\n  }\r\n  const useStyles = makeStyles({\r\n    listItem: {\r\n      color: itemColor,\r\n    },\r\n    mainList: {\r\n      background: listBgColor,\r\n      height: \"100vh\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <List\r\n      className={classes.mainList}\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader className={classes.listItem} component=\"div\" id=\"nested-list-subheader\">\r\n          See more\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <TodayIcon className={classes.listItem}></TodayIcon>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} color=\"white\" primary=\"Today\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <EventNoteTwoTone className={classes.listItem}></EventNoteTwoTone>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} primary=\"Upcomming\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <AlarmOn className={classes.listItem}></AlarmOn>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} primary=\"CountDown\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\nexport default SideBar;\r\n","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\taskBoard.js",["70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":11},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","replacedBy":"83"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"77","severity":1,"message":"84","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":17},{"ruleId":"77","severity":1,"message":"85","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":11},{"ruleId":"86","severity":1,"message":"87","line":10,"column":3,"nodeType":"79","endLine":10,"endColumn":12,"suggestions":"88"},{"ruleId":"77","severity":1,"message":"89","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":26},{"ruleId":"77","severity":1,"message":"90","line":6,"column":28,"nodeType":"79","messageId":"80","endLine":6,"endColumn":37},{"ruleId":"77","severity":1,"message":"91","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":30},{"ruleId":"77","severity":1,"message":"92","line":9,"column":19,"nodeType":"79","messageId":"80","endLine":9,"endColumn":32},{"ruleId":"93","severity":1,"message":"94","line":110,"column":15,"nodeType":"95","endLine":110,"endColumn":58},{"ruleId":"77","severity":1,"message":"96","line":123,"column":10,"nodeType":"79","messageId":"80","endLine":123,"endColumn":21},{"ruleId":"77","severity":1,"message":"97","line":123,"column":23,"nodeType":"79","messageId":"80","endLine":123,"endColumn":37},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Fab' is defined but never used.",["98"],["99"],"'TextField' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setbgColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.darkMode, bgColor] as a second argument to the useEffect Hook.",["100"],"'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'PureComponent' is defined but never used.","'CalendarToday' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'currentTask' is assigned a value but never used.","'setcurrentTask' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Add dependencies array: [props.darkMode, bgColor]",{"range":"103","text":"104"},[600,600],", [props.darkMode, bgColor]"]