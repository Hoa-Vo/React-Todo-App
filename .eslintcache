[{"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\index.js":"1","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\App.js":"2","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\reportWebVitals.js":"3","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\navBar.js":"4","E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\body.js":"5","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\index.js":"6","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\reportWebVitals.js":"7","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\App.js":"8","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\body.js":"9","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\navBar.js":"10","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\sideBar.js":"11","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\taskBoard.js":"12","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\weather.js":"13","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\quote.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":346,"mtime":1611751765079,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":674,"mtime":1611759393336,"results":"19","hashOfConfig":"16"},{"size":656,"mtime":1611761615057,"results":"20","hashOfConfig":"16"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":550,"mtime":1612116980857,"results":"24","hashOfConfig":"22"},{"size":961,"mtime":1611936557107,"results":"25","hashOfConfig":"22"},{"size":1606,"mtime":1611937709849,"results":"26","hashOfConfig":"22"},{"size":2008,"mtime":1611925521181,"results":"27","hashOfConfig":"22"},{"size":4004,"mtime":1612286083074,"results":"28","hashOfConfig":"22"},{"size":1597,"mtime":1612285585047,"results":"29","hashOfConfig":"22"},{"size":799,"mtime":1612291215199,"results":"30","hashOfConfig":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"19df08n",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jttvl7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\index.js",[],["65","66"],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\App.js",["67"],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\reportWebVitals.js",[],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\navBar.js",[],"E:\\IT documents\\Web programing\\ReactJS\\react-todo-app\\src\\components\\body.js",["68"],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\index.js",[],["69","70"],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\reportWebVitals.js",[],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\App.js",["71"],"import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./components/navBar\";\nimport NavBar from \"./components/navBar\";\nimport Body from \"./components/body\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const darkModeChange = () => {\n    setDarkMode(!darkMode);\n  };\n  return (\n    <div className=\"App\">\n      <NavBar onChange={darkModeChange}></NavBar>\n      <Body darkMode={darkMode}></Body>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\body.js",["72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../css/body.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SideBar from \"./sideBar\";\r\nimport TaskBoard from \"./taskBoard\";\r\n\r\nfunction Body(props) {\r\n  const [bgColor, setbgColor] = useState(\"white\");\r\n  useEffect(() => {\r\n    if (props.darkMode) {\r\n      setbgColor(\"#202020\");\r\n      document.getElementById(\"body\").style.backgroundColor = bgColor;\r\n    } else {\r\n      setbgColor(\"white\");\r\n      document.getElementById(\"body\").style.backgroundColor = bgColor;\r\n    }\r\n  });\r\n  return (\r\n    <div id=\"body\" className=\"main-body\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <SideBar darkMode={props.darkMode}></SideBar>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <TaskBoard darkMode={props.darkMode}></TaskBoard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\navBar.js",["75","76"],"import React, { useState } from \"react\";\r\nimport \"../css/navBar.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport { FormControlLabel, FormGroup, Switch, withStyles } from \"@material-ui/core\";\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: \"#000000\",\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: \"#4ee44e\",\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\",\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n\r\nfunction NavBar(props) {\r\n  const [darkmode, setDarkMode] = useState(false);\r\n  const handleChange = event => {\r\n    setDarkMode(!darkmode);\r\n    props.onChange(darkmode);\r\n  };\r\n  return (\r\n    <Navbar className=\"main\" bg=\"primary\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\">\r\n        <PlaylistAddIcon></PlaylistAddIcon>ToDo\r\n      </Navbar.Brand>\r\n      <Nav className=\"justify-content-end main-nav-bar\">\r\n        <p className=\"darkmode-p\">DarkMode</p>\r\n        <AntSwitch onChange={handleChange} name=\"darkmode\" />\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\sideBar.js",["77","78"],"import React, { PureComponent } from \"react\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AlarmOn, CalendarToday, EventNoteTwoTone } from \"@material-ui/icons\";\r\n\r\nfunction SideBar(props) {\r\n  let itemColor = \"black\";\r\n  let listBgColor = \"#f9f9f9\";\r\n  if (props.darkMode) {\r\n    itemColor = \"#f9f9f9\";\r\n    listBgColor = \"#2a2a2a\";\r\n  } else {\r\n    itemColor = \"black\";\r\n    listBgColor = \"#f9f9f9\";\r\n  }\r\n  const useStyles = makeStyles({\r\n    listItem: {\r\n      color: itemColor,\r\n    },\r\n    mainList: {\r\n      background: listBgColor,\r\n      height: \"100vh\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <List\r\n      className={classes.mainList}\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader className={classes.listItem} component=\"div\" id=\"nested-list-subheader\">\r\n          See more\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <TodayIcon className={classes.listItem}></TodayIcon>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} color=\"white\" primary=\"Today\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <EventNoteTwoTone className={classes.listItem}></EventNoteTwoTone>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} primary=\"Upcomming\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <AlarmOn className={classes.listItem}></AlarmOn>\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.listItem} primary=\"CountDown\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\nexport default SideBar;\r\n","E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\taskBoard.js",["79","80","81","82"],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\weather.js",["83"],"E:\\IT documents\\Web programing\\ReactJS\\React-Todo-App\\src\\components\\quote.js",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":12},{"ruleId":"89","severity":1,"message":"93","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":11},{"ruleId":"85","replacedBy":"94"},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":12},{"ruleId":"89","severity":1,"message":"96","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":17},{"ruleId":"89","severity":1,"message":"97","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":11},{"ruleId":"98","severity":1,"message":"99","line":10,"column":3,"nodeType":"91","endLine":10,"endColumn":12,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"101","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":26},{"ruleId":"89","severity":1,"message":"102","line":6,"column":28,"nodeType":"91","messageId":"92","endLine":6,"endColumn":37},{"ruleId":"89","severity":1,"message":"103","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":30},{"ruleId":"89","severity":1,"message":"104","line":9,"column":19,"nodeType":"91","messageId":"92","endLine":9,"endColumn":32},{"ruleId":"89","severity":1,"message":"105","line":88,"column":11,"nodeType":"91","messageId":"92","endLine":88,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":118,"column":15,"nodeType":"108","endLine":118,"endColumn":58},{"ruleId":"89","severity":1,"message":"109","line":134,"column":10,"nodeType":"91","messageId":"92","endLine":134,"endColumn":21},{"ruleId":"89","severity":1,"message":"110","line":134,"column":23,"nodeType":"91","messageId":"92","endLine":134,"endColumn":37},{"ruleId":"106","severity":1,"message":"107","line":41,"column":11,"nodeType":"108","endLine":41,"endColumn":58},{"ruleId":"89","severity":1,"message":"111","line":5,"column":9,"nodeType":"91","messageId":"92","endLine":5,"endColumn":20},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Fab' is defined but never used.",["112"],["113"],"'TextField' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setbgColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.darkMode, bgColor] as a second argument to the useEffect Hook.",["114"],"'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'PureComponent' is defined but never used.","'CalendarToday' is defined but never used.","'content' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'currentTask' is assigned a value but never used.","'setcurrentTask' is assigned a value but never used.","'renderQuote' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Add dependencies array: [props.darkMode, bgColor]",{"range":"117","text":"118"},[600,600],", [props.darkMode, bgColor]"]